{"version":3,"sources":["index.js"],"names":["reset","window","location","reload","Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","ResetButton","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2PAKA,SAASA,IAEPC,OAAOC,SAASC,QAAO,GAIxB,SAASC,EAAOC,GAEf,OAEE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SAEvCF,EAAMG,O,IAKLC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAU,GAJK,E,wDAgBPC,GAER,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CAACR,QAASA,EAASG,SAAUE,KAAKN,MAAMI,a,mCAG7CC,GAAI,IAAD,OACd,OACA,kBAACX,EAAD,CAAQI,MAAOQ,KAAKN,MAAMC,QAAQI,GAChCR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAOlC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAS1C,OANEU,EADEC,EACO,oBAAsBA,EAGtB,gBAAkBN,KAAKN,MAAMI,QAAU,IAAM,KAItD,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,IAEjE,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,IAEjE,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,S,GAxDrDC,IAAMC,WA+DpBC,E,uKAEF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACf,2CACE,kBAACG,EAAD,MACA,kBAACkB,EAAD,OAGF,yBAAKrB,UAAU,aACb,8BACA,mC,GAZSkB,IAAMC,WAoBnBE,E,uKAIF,OAEE,4BAAQpB,QAASP,GAAjB,a,GANoBwB,IAAMC,WAoBhC,SAASP,EAAgBP,GAWvB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAxBTG,IAASC,OAEP,kBAACR,EAAD,MACAS,SAASC,eAAe,W","file":"static/js/main.ef393d71.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction reset(){\r\n\r\n  window.location.reload(false);\r\n}\r\n\r\n\r\n function Square(props){\r\n\r\n  return (\r\n\r\n    <button className=\"square\" onClick={props.onClick}>\r\n\r\n      {props.value}\r\n    </button>\r\n  );\r\n }\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        xIsNext:  true,\r\n\r\n        \r\n      };\r\n    }\r\n\r\n     \r\n\r\n    \r\n    \r\n\r\n\r\n    handleClick(i){\r\n\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({squares: squares, xIsNext: !this.state.xIsNext});\r\n    }\r\n  \r\n    renderSquare(i) {\r\n      return (\r\n      <Square value={this.state.squares[i]} \r\n        onClick={() => this.handleClick(i)}\r\n\r\n      />\r\n      );\r\n    }\r\n    \r\n    render() {\r\n      const winner = calculateWinner(this.state.squares);\r\n      let status;\r\n      if (winner){\r\n        status = 'Winner well done ' + winner;\r\n\r\n      }else {\r\n        status = 'Next player ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n          <h1>Tic Tac Toe</h1>\r\n            <Board />\r\n            <ResetButton/>\r\n            \r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  class ResetButton extends React.Component{\r\n\r\n    render(){\r\n\r\n      return(\r\n\r\n        <button onClick={reset}>Reset</button>\r\n      )\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  "],"sourceRoot":""}